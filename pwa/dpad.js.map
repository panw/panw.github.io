{"version":3,"file":"dpad.js","sources":["../../../src/lib/_focusable-item.ts","../../../src/lib/_calc-distance.ts","../../../src/lib/dpad-controller.ts","../../../src/helper/dpad.ts"],"sourcesContent":["// Copyright 2013 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Point} from \"./_point\";\n\nexport class FocusableItem {\n  private element: HTMLElement;\n  private focusState: boolean = false;\n\n  private neighbors: Neighbors;\n\n  constructor(ele: HTMLElement) {\n    this.element = ele;\n    this.resetNeighbors();\n  }\n\n  getElement() {\n      return this.element;\n  }\n\n  focus() {\n    this.element.focus();\n  }\n\n  resetNeighbors() {\n    this.neighbors = {\n      top: null,\n      bottom: null,\n      left: null,\n      right: null,\n    };\n  };\n\n  setTopFocusItemIndex(index: number) {\n    this.neighbors.top = index;\n  };\n\n  getTopFocusItemIndex(): number {\n    return this.neighbors.top;\n  };\n\n  setBottomFocusItemIndex(index: number) {\n    this.neighbors.bottom = index;\n  };\n\n  getBottomFocusItemIndex(): number {\n    return this.neighbors.bottom;\n  };\n\n  setLeftFocusItemIndex(index: number) {\n    this.neighbors.left = index;\n  };\n\n  getLeftFocusItemIndex(): number {\n    return this.neighbors.left;\n  };\n\n  setRightFocusItemIndex(index: number) {\n    this.neighbors.right = index;\n  };\n\n  getRightFocusItemIndex(): number {\n    return this.neighbors.right;\n  };\n\n  isFocusable(): boolean {\n    if(this.element.style.display === 'none' || this.element.style.visibility === 'hidden') {\n      return false;\n    }\n\n    let tabIndexAttr = this.element.getAttribute('tabindex');\n    if (!tabIndexAttr) {\n      return false\n    }\n    \n    try {\n      const tabIndex = parseInt(tabIndexAttr, 10)\n      return tabIndex > -1;\n    } catch (err) {\n      // NOOP\n    }\n\n    return false;\n  }\n\n  getMetrics(): Metrics {\n    var clientRect = this.element.getBoundingClientRect();\n    return {\n      width: clientRect.width,\n      height: clientRect.height,\n      left: clientRect.left,\n      right: clientRect.left + clientRect.width,\n      top: clientRect.top,\n      bottom: clientRect.top + clientRect.height,\n      center: {\n        x: clientRect.left + (clientRect.width / 2),\n        y: clientRect.top + (clientRect.height / 2)\n      }\n    };\n  }\n\n  onItemClickStateChange(isDown: boolean) {\n    // NOOP\n  }\n}\n\nexport interface Neighbors {\n  top: number|null;\n  bottom: number|null;\n  left: number|null;\n  right: number|null;\n}\n\nexport interface Metrics {\n  width: number\n  height: number\n  left: number\n  right: number\n  top: number\n  bottom: number\n  center: Point\n}","export function calcDistance(x: number, y: number): number {\n  return Math.floor(Math.sqrt((x * x) + (y * y)));\n}","// Copyright 2013 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {FocusableItem, Metrics} from './_focusable-item';\nimport {calcDistance} from './_calc-distance';\n\nconst FOCUSABLE_ITEM_SELECTOR = '.dpad-focusable';\n\nexport class DpadController {\n  private focusableItems: Array<FocusableItem> = [];\n  private currentlyFocusedItem: FocusableItem|null = null;\n  private enabled: boolean = false;\n\n  constructor() {\n    this.focusableItems = [];\n    this.onKeyDown = this.onKeyDown.bind(this);\n    this.onKeyUp = this.onKeyUp.bind(this);\n    this.enable()\n  }\n\n  disable() {\n    if (!this.enabled) {\n      return\n    }\n\n    document.removeEventListener('keydown', this.onKeyDown);\n    document.removeEventListener('keyup', this.onKeyUp);\n\n    this.enabled = false;\n  }\n\n  enable() {\n    if (this.enabled) {\n      return\n    }\n\n    // Set up binding to listen for key presses\n    document.addEventListener('keydown', this.onKeyDown);\n    document.addEventListener('keyup', this.onKeyUp);\n\n    this.enabled = true;\n  }\n\n  findFocusableItems() {\n    const focusableItems: NodeListOf<HTMLElement> = document.querySelectorAll(FOCUSABLE_ITEM_SELECTOR);\n    for(const fi of focusableItems) {\n      this.addFocusableItem(new FocusableItem(fi));\n    }\n  }\n\n  addFocusableItem(i: FocusableItem) {\n    this.focusableItems.push(i);\n  }\n\n  getFocusableItems(): Array<FocusableItem> {\n    return this.focusableItems;\n  }\n\n  getFocusableItem(index: number) {\n    if(index >= this.focusableItems.length || index < 0) {\n        return null;\n    }\n\n    return this.focusableItems[index];\n  }\n\n  setCurrentFocusItem(i: number) {\n    const fi = this.getFocusableItem(i);\n    this.currentlyFocusedItem = fi;\n    if(!this.currentlyFocusedItem) {\n      return\n    }\n    this.currentlyFocusedItem.focus();\n  }\n\n  update() {\n    this.findFocusableItems();\n\n    for(const fi of this.focusableItems) {\n        // If the element can't be focused, skip it.\n        if(!fi.isFocusable()) {\n            continue;\n        }\n\n        this.updateNeighbors(fi);\n    }\n  }\n\n  moveFocus(direction: Point) {\n    // We need an item to move down from\n    if(!this.currentlyFocusedItem) {\n        if (this.focusableItems.length > 0) {\n          this.setCurrentFocusItem(0);\n        }\n        return;\n    }\n\n    var nextItemIndex = null;\n    if(direction.y === 0) {\n        if(direction.x > 0) {\n            // Move Right\n            nextItemIndex = this.currentlyFocusedItem.getRightFocusItemIndex();\n        } else {\n            // Move Left\n            nextItemIndex = this.currentlyFocusedItem.getLeftFocusItemIndex();\n        }\n    } else if(direction.x === 0) {\n        if(direction.y > 0) {\n            // Move Up\n            nextItemIndex = this.currentlyFocusedItem.getTopFocusItemIndex();\n        } else {\n            // Move Down\n            nextItemIndex = this.currentlyFocusedItem.getBottomFocusItemIndex();\n        }\n    }\n\n    if(nextItemIndex !== null) {\n        this.setCurrentFocusItem(nextItemIndex);\n    }\n  }\n\n  private updateNeighbors(fi: FocusableItem) {\n    const metrics = fi.getMetrics();\n\n    const itemCount = this.focusableItems.length;\n\n    let minTopElementDist;\n    let minBottomElementDist;\n    let minLeftElementDist;\n    let minRightElementDist;\n\n    for(var i = 0; i < itemCount; i++) {\n      var newItem = this.getFocusableItem(i);\n      // If the element can't be focused, or is the current element,\n      // skip it.\n      if(!newItem.isFocusable() || newItem === fi) {\n          continue;\n      }\n\n      const newItemMetrics = newItem.getMetrics();\n      const distanceTop = this.getTopDistance(metrics, newItemMetrics);\n      const distanceBottom = this.getBottomDistance(metrics, newItemMetrics);\n      const distanceLeft = this.getLeftDistance(metrics, newItemMetrics);\n      const distanceRight = this.getRightDistance(metrics, newItemMetrics);\n\n      if(distanceTop !== null && (typeof minTopElementDist === 'undefined' || minTopElementDist > distanceTop)) {\n          minTopElementDist = distanceTop;\n\n          fi.setTopFocusItemIndex(i);\n      }\n\n      if(distanceBottom !== null && (typeof minBottomElementDist === 'undefined' || minBottomElementDist > distanceBottom)) {\n          minBottomElementDist = distanceBottom;\n\n          fi.setBottomFocusItemIndex(i);\n      }\n\n      if(distanceLeft !== null && (typeof minLeftElementDist === 'undefined' || minLeftElementDist > distanceLeft)) {\n          minLeftElementDist = distanceLeft;\n\n          fi.setLeftFocusItemIndex(i);\n      }\n\n      if(distanceRight !== null && (typeof minRightElementDist === 'undefined' || minRightElementDist > distanceRight)) {\n          minRightElementDist = distanceRight;\n\n          fi.setRightFocusItemIndex(i);\n      }\n    }\n  }\n\n  private verticalDistance(fromMetrics: Metrics, toMetrics: Metrics, higher: Metrics, lower: Metrics) {\n    if (higher.bottom > lower.top) {\n      return null;\n    }\n\n    const left = Math.abs(fromMetrics.center.x - toMetrics.left);\n    const right = Math.abs(fromMetrics.center.x - toMetrics.right);\n\n    const x = Math.min(\n      Math.abs(fromMetrics.center.x - toMetrics.left),\n      Math.abs(fromMetrics.center.x - toMetrics.center.x),\n      Math.abs(fromMetrics.center.x - toMetrics.right),\n    );\n    const y = lower.center.y - higher.center.y;\n\n    const angleLeft = Math.atan(y / left) * (180/Math.PI);\n    const angleRight = Math.atan(y / right) * (180/Math.PI);\n    // If the angle is too shallow it's not really up\n    if(!(angleLeft >= 0 && angleRight <= 180)) {\n        return null;\n    }\n\n    return calcDistance(x, y);\n  }\n\n  private getTopDistance(fromMetrics: Metrics, toMetrics: Metrics) {\n    // Move Up\n    return this.verticalDistance(fromMetrics, toMetrics, toMetrics, fromMetrics);\n  }\n\n  private getBottomDistance(fromMetrics: Metrics, toMetrics: Metrics) {\n    // Move Down\n    return this.verticalDistance(fromMetrics, toMetrics, fromMetrics, toMetrics);\n  }\n\n  private horizontalDistance(fromMetrics: Metrics, toMetrics: Metrics, lefter: Metrics, righter: Metrics) {\n    if (lefter.right > righter.left) {\n      return null;\n    }\n\n    const top = Math.abs(fromMetrics.center.y - toMetrics.top);\n    const bottom = Math.abs(fromMetrics.center.y - toMetrics.bottom);\n\n    const x = righter.center.x - lefter.center.x;\n    const y = Math.min(\n      Math.abs(fromMetrics.center.y - toMetrics.top),\n      Math.abs(fromMetrics.center.y - toMetrics.center.y),\n      Math.abs(fromMetrics.center.y - toMetrics.bottom),\n    );\n\n    var angleTop = Math.atan(x / top) * (180/Math.PI);\n    var angleBottom = Math.atan(x / bottom) * (180/Math.PI);\n    // If the angle is too shallow it's not really up\n    if(!(angleTop >= 0 && angleBottom <= 180)) {\n        return null;\n    }\n\n    return calcDistance(x, y);\n  }\n\n  private getLeftDistance(fromMetrics: Metrics, toMetrics: Metrics) {\n    // Move Left\n    return this.horizontalDistance(fromMetrics, toMetrics, toMetrics, fromMetrics);\n  }\n\n  private getRightDistance = function(fromMetrics: Metrics, toMetrics: Metrics) {\n    // Move Right\n    return this.horizontalDistance(fromMetrics, toMetrics, fromMetrics, toMetrics);\n  }\n\n  private onKeyDown(event: KeyboardEvent) {\n    switch(event.keyCode) {\n        case 9:\n            // Tab\n            break;\n        case 37:\n            // Left\n            event.preventDefault();\n            this.moveFocus({x: -1, y: 0});\n            break;\n        case 38:\n            // Up\n            event.preventDefault();\n            this.moveFocus({x: 0, y: 1});\n            break;\n        case 39:\n            // Right\n            event.preventDefault();\n            this.moveFocus({x: 1, y: 0});\n            break;\n        case 40:\n            // Down\n            event.preventDefault();\n            this.moveFocus({x: 0, y: -1});\n            break;\n        // case 13:\n        // case 32:\n        //     // Enter\n        //     event.preventDefault();\n        //     if(this.currentlyFocusedItem) {\n        //         this.currentlyFocusedItem.onItemClickStateChange(true);\n        //     }\n        //     break;\n    }\n  }\n\n  private onKeyUp(event: KeyboardEvent) {\n    switch(event.keyCode) {\n        case 13:\n            // Enter\n            event.preventDefault();\n            if(this.currentlyFocusedItem) {\n                this.currentlyFocusedItem.onItemClickStateChange(false);\n            }\n            break;\n    }\n  }\n}\n\ninterface Point {\n  x: number\n  y: number\n}","// Copyright 2013 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport {DpadController} from '../lib/dpad-controller';\n\ndeclare global {\n  interface Window { dpad: DpadController; }\n}\n\nwindow.addEventListener('load', () => {\n\twindow.dpad = window.dpad || new DpadController();\n\twindow.dpad.update();\n});\n\nwindow.addEventListener('resize', () => {\n\tif(!window.dpad) {\n\t\treturn;\n\t}\n\twindow.dpad.update();\n});"],"names":["FocusableItem","[object Object]","ele","this","element","resetNeighbors","focus","neighbors","top","bottom","left","right","index","style","display","visibility","tabIndexAttr","getAttribute","parseInt","err","clientRect","getBoundingClientRect","width","height","center","x","y","isDown","calcDistance","Math","floor","sqrt","DpadController","fromMetrics","toMetrics","horizontalDistance","focusableItems","onKeyDown","bind","onKeyUp","enable","enabled","document","removeEventListener","addEventListener","querySelectorAll","fi","addFocusableItem","i","push","length","getFocusableItem","currentlyFocusedItem","findFocusableItems","isFocusable","updateNeighbors","direction","nextItemIndex","getRightFocusItemIndex","getLeftFocusItemIndex","getTopFocusItemIndex","getBottomFocusItemIndex","setCurrentFocusItem","metrics","getMetrics","itemCount","minTopElementDist","minBottomElementDist","minLeftElementDist","minRightElementDist","newItem","newItemMetrics","distanceTop","getTopDistance","distanceBottom","getBottomDistance","distanceLeft","getLeftDistance","distanceRight","getRightDistance","setTopFocusItemIndex","setBottomFocusItemIndex","setLeftFocusItemIndex","setRightFocusItemIndex","higher","lower","abs","min","angleLeft","atan","PI","angleRight","verticalDistance","lefter","righter","angleTop","angleBottom","event","keyCode","preventDefault","moveFocus","onItemClickStateChange","window","dpad","update"],"mappings":"+BAgBaA,EAMXC,YAAYC,GAJJC,iBAAsB,EAK5BA,KAAKC,QAAUF,EACfC,KAAKE,iBAGPJ,aACI,OAAOE,KAAKC,QAGhBH,QACEE,KAAKC,QAAQE,QAGfL,iBACEE,KAAKI,UAAY,CACfC,IAAK,KACLC,OAAQ,KACRC,KAAM,KACNC,MAAO,MAIXV,qBAAqBW,GACnBT,KAAKI,UAAUC,IAAMI,EAGvBX,uBACE,OAAOE,KAAKI,UAAUC,IAGxBP,wBAAwBW,GACtBT,KAAKI,UAAUE,OAASG,EAG1BX,0BACE,OAAOE,KAAKI,UAAUE,OAGxBR,sBAAsBW,GACpBT,KAAKI,UAAUG,KAAOE,EAGxBX,wBACE,OAAOE,KAAKI,UAAUG,KAGxBT,uBAAuBW,GACrBT,KAAKI,UAAUI,MAAQC,EAGzBX,yBACE,OAAOE,KAAKI,UAAUI,MAGxBV,cACE,GAAkC,SAA/BE,KAAKC,QAAQS,MAAMC,SAAwD,WAAlCX,KAAKC,QAAQS,MAAME,WAC7D,OAAO,EAGT,IAAIC,EAAeb,KAAKC,QAAQa,aAAa,YAC7C,IAAKD,EACH,OAAO,EAGT,IAEE,OADiBE,SAASF,EAAc,KACrB,EACnB,MAAOG,IAIT,OAAO,EAGTlB,aACE,IAAImB,EAAajB,KAAKC,QAAQiB,wBAC9B,MAAO,CACLC,MAAOF,EAAWE,MAClBC,OAAQH,EAAWG,OACnBb,KAAMU,EAAWV,KACjBC,MAAOS,EAAWV,KAAOU,EAAWE,MACpCd,IAAKY,EAAWZ,IAChBC,OAAQW,EAAWZ,IAAMY,EAAWG,OACpCC,OAAQ,CACNC,EAAGL,EAAWV,KAAQU,EAAWE,MAAQ,EACzCI,EAAGN,EAAWZ,IAAOY,EAAWG,OAAS,IAK/CtB,uBAAuB0B,cChHTC,EAAaH,EAAWC,GACtC,OAAOG,KAAKC,MAAMD,KAAKE,KAAMN,EAAIA,EAAMC,EAAIA,UCkBhCM,EAKX/B,cAJQE,oBAAuC,GACvCA,0BAA2C,KAC3CA,cAAmB,EAiOnBA,sBAAmB,SAAS8B,EAAsBC,GAExD,OAAO/B,KAAKgC,mBAAmBF,EAAaC,EAAWD,EAAaC,IAhOpE/B,KAAKiC,eAAiB,GACtBjC,KAAKkC,UAAYlC,KAAKkC,UAAUC,KAAKnC,MACrCA,KAAKoC,QAAUpC,KAAKoC,QAAQD,KAAKnC,MACjCA,KAAKqC,SAGPvC,UACOE,KAAKsC,UAIVC,SAASC,oBAAoB,UAAWxC,KAAKkC,WAC7CK,SAASC,oBAAoB,QAASxC,KAAKoC,SAE3CpC,KAAKsC,SAAU,GAGjBxC,SACME,KAAKsC,UAKTC,SAASE,iBAAiB,UAAWzC,KAAKkC,WAC1CK,SAASE,iBAAiB,QAASzC,KAAKoC,SAExCpC,KAAKsC,SAAU,GAGjBxC,qBACE,MAAMmC,EAA0CM,SAASG,iBAtC7B,mBAuC5B,IAAI,MAAMC,KAAMV,EACdjC,KAAK4C,iBAAiB,IAAI/C,EAAc8C,IAI5C7C,iBAAiB+C,GACf7C,KAAKiC,eAAea,KAAKD,GAG3B/C,oBACE,OAAOE,KAAKiC,eAGdnC,iBAAiBW,GACf,OAAGA,GAAST,KAAKiC,eAAec,QAAUtC,EAAQ,EACvC,KAGJT,KAAKiC,eAAexB,GAG7BX,oBAAoB+C,GAClB,MAAMF,EAAK3C,KAAKgD,iBAAiBH,GACjC7C,KAAKiD,qBAAuBN,EACxB3C,KAAKiD,sBAGTjD,KAAKiD,qBAAqB9C,QAG5BL,SACEE,KAAKkD,qBAEL,IAAI,MAAMP,KAAM3C,KAAKiC,eAEbU,EAAGQ,eAIPnD,KAAKoD,gBAAgBT,GAI3B7C,UAAUuD,GAER,GAAIrD,KAAKiD,qBAAT,CAOA,IAAIK,EAAgB,KACD,IAAhBD,EAAU9B,EAGL+B,EAFDD,EAAU/B,EAAI,EAEGtB,KAAKiD,qBAAqBM,yBAG1BvD,KAAKiD,qBAAqBO,wBAExB,IAAhBH,EAAU/B,IAGZgC,EAFDD,EAAU9B,EAAI,EAEGvB,KAAKiD,qBAAqBQ,uBAG1BzD,KAAKiD,qBAAqBS,2BAI7B,OAAlBJ,GACCtD,KAAK2D,oBAAoBL,QA1BrBtD,KAAKiC,eAAec,OAAS,GAC/B/C,KAAK2D,oBAAoB,GA6BzB7D,gBAAgB6C,GACtB,MAAMiB,EAAUjB,EAAGkB,aAEbC,EAAY9D,KAAKiC,eAAec,OAEtC,IAAIgB,EACAC,EACAC,EACAC,EAEJ,IAAI,IAAIrB,EAAI,EAAGA,EAAIiB,EAAWjB,IAAK,CACjC,IAAIsB,EAAUnE,KAAKgD,iBAAiBH,GAGpC,IAAIsB,EAAQhB,eAAiBgB,IAAYxB,EACrC,SAGJ,MAAMyB,EAAiBD,EAAQN,aACzBQ,EAAcrE,KAAKsE,eAAeV,EAASQ,GAC3CG,EAAiBvE,KAAKwE,kBAAkBZ,EAASQ,GACjDK,EAAezE,KAAK0E,gBAAgBd,EAASQ,GAC7CO,EAAgB3E,KAAK4E,iBAAiBhB,EAASQ,GAElC,OAAhBC,SAAsD,IAAtBN,GAAqCA,EAAoBM,KACxFN,EAAoBM,EAEpB1B,EAAGkC,qBAAqBhC,IAGN,OAAnB0B,SAA4D,IAAzBP,GAAwCA,EAAuBO,KACjGP,EAAuBO,EAEvB5B,EAAGmC,wBAAwBjC,IAGX,OAAjB4B,SAAwD,IAAvBR,GAAsCA,EAAqBQ,KAC3FR,EAAqBQ,EAErB9B,EAAGoC,sBAAsBlC,IAGR,OAAlB8B,SAA0D,IAAxBT,GAAuCA,EAAsBS,KAC9FT,EAAsBS,EAEtBhC,EAAGqC,uBAAuBnC,KAK1B/C,iBAAiBgC,EAAsBC,EAAoBkD,EAAiBC,GAClF,GAAID,EAAO3E,OAAS4E,EAAM7E,IACxB,OAAO,KAGT,MAAME,EAAOmB,KAAKyD,IAAIrD,EAAYT,OAAOC,EAAIS,EAAUxB,MACjDC,EAAQkB,KAAKyD,IAAIrD,EAAYT,OAAOC,EAAIS,EAAUvB,OAElDc,EAAII,KAAK0D,IACb1D,KAAKyD,IAAIrD,EAAYT,OAAOC,EAAIS,EAAUxB,MAC1CmB,KAAKyD,IAAIrD,EAAYT,OAAOC,EAAIS,EAAUV,OAAOC,GACjDI,KAAKyD,IAAIrD,EAAYT,OAAOC,EAAIS,EAAUvB,QAEtCe,EAAI2D,EAAM7D,OAAOE,EAAI0D,EAAO5D,OAAOE,EAEnC8D,EAAY3D,KAAK4D,KAAK/D,EAAIhB,IAAS,IAAImB,KAAK6D,IAC5CC,EAAa9D,KAAK4D,KAAK/D,EAAIf,IAAU,IAAIkB,KAAK6D,IAEpD,OAAKF,GAAa,GAAKG,GAAc,IAI9B/D,EAAaH,EAAGC,GAHZ,KAMLzB,eAAegC,EAAsBC,GAE3C,OAAO/B,KAAKyF,iBAAiB3D,EAAaC,EAAWA,EAAWD,GAG1DhC,kBAAkBgC,EAAsBC,GAE9C,OAAO/B,KAAKyF,iBAAiB3D,EAAaC,EAAWD,EAAaC,GAG5DjC,mBAAmBgC,EAAsBC,EAAoB2D,EAAiBC,GACpF,GAAID,EAAOlF,MAAQmF,EAAQpF,KACzB,OAAO,KAGT,MAAMF,EAAMqB,KAAKyD,IAAIrD,EAAYT,OAAOE,EAAIQ,EAAU1B,KAChDC,EAASoB,KAAKyD,IAAIrD,EAAYT,OAAOE,EAAIQ,EAAUzB,QAEnDgB,EAAIqE,EAAQtE,OAAOC,EAAIoE,EAAOrE,OAAOC,EACrCC,EAAIG,KAAK0D,IACb1D,KAAKyD,IAAIrD,EAAYT,OAAOE,EAAIQ,EAAU1B,KAC1CqB,KAAKyD,IAAIrD,EAAYT,OAAOE,EAAIQ,EAAUV,OAAOE,GACjDG,KAAKyD,IAAIrD,EAAYT,OAAOE,EAAIQ,EAAUzB,SAG5C,IAAIsF,EAAWlE,KAAK4D,KAAKhE,EAAIjB,IAAQ,IAAIqB,KAAK6D,IAC1CM,EAAcnE,KAAK4D,KAAKhE,EAAIhB,IAAW,IAAIoB,KAAK6D,IAEpD,OAAKK,GAAY,GAAKC,GAAe,IAI9BpE,EAAaH,EAAGC,GAHZ,KAMLzB,gBAAgBgC,EAAsBC,GAE5C,OAAO/B,KAAKgC,mBAAmBF,EAAaC,EAAWA,EAAWD,GAQ5DhC,UAAUgG,GAChB,OAAOA,EAAMC,SACT,KAAK,EAED,MACJ,KAAK,GAEDD,EAAME,iBACNhG,KAAKiG,UAAU,CAAC3E,GAAI,EAAGC,EAAG,IAC1B,MACJ,KAAK,GAEDuE,EAAME,iBACNhG,KAAKiG,UAAU,CAAC3E,EAAG,EAAGC,EAAG,IACzB,MACJ,KAAK,GAEDuE,EAAME,iBACNhG,KAAKiG,UAAU,CAAC3E,EAAG,EAAGC,EAAG,IACzB,MACJ,KAAK,GAEDuE,EAAME,iBACNhG,KAAKiG,UAAU,CAAC3E,EAAG,EAAGC,GAAI,KAa5BzB,QAAQgG,GACd,OAAOA,EAAMC,SACT,KAAK,GAEDD,EAAME,iBACHhG,KAAKiD,sBACJjD,KAAKiD,qBAAqBiD,wBAAuB,KCnRjEC,OAAO1D,iBAAiB,OAAQ,KAC/B0D,OAAOC,KAAOD,OAAOC,MAAQ,IAAIvE,EACjCsE,OAAOC,KAAKC,WAGbF,OAAO1D,iBAAiB,SAAU,KAC7B0D,OAAOC,MAGXD,OAAOC,KAAKC"}